{
  "name": "mobius-games-tutorial-generator",
  "version": "1.0.0",
  "description": "A pipeline for generating game tutorial videos from structured game rules",
  "main": "index.js",
  "type": "module",
  "engines": {
    "node": ">=20.14.0 <21"
  },
  "packageManager": "npm@10",
  "scripts": {
    "dev": "concurrently \"npm run server\" \"npm run client\"",
    "server": "node src/api/index.js",
    "client": "cd client && npm start",
    "compile-shotlist": "node scripts/compile-shotlist.mjs",
    "bind-alignment": "node scripts/bind-alignment.mjs",
    "render": "node scripts/render-ffmpeg.mjs",
    "verify": "node scripts/verify.mjs",
    "test-pipeline": "npm run compile-shotlist && npm run verify && npm run bind-alignment",
    "test": "jest",
    "gen:shotlists": "node scripts/compile-shotlist.mjs gigs/hanamikoji.json > tmp/shotlist.json",
    "gen:timelines": "echo 'Generating timelines...'",
    "render:proxy": "node scripts/render-ffmpeg.mjs tmp/timeline.json assets out/preview.mp4 --preview",
    "golden:check": "cross-env node scripts/check_golden.cjs --perOs",
    "golden:update:sushi": "node scripts/generate_golden.cjs --game \"Sushi Go\" --in \"out/sushi-go/preview.mp4\" --out \"tests/golden/sushi-go\" --frames \"5,10,20\"",
    "golden:update:loveletter": "node scripts/generate_golden.cjs --game \"Love Letter\" --in \"out/love-letter/preview.mp4\" --out \"tests/golden/loveletter\" --frames \"5,10,20\"",
    "golden:check:sushi": "node scripts/check_golden.cjs --game \"Sushi Go\" --in \"out/sushi-go/preview.mp4\" --golden \"tests/golden/sushi-go\" --frames \"5,10,20\" --ssim \"0.995\" --lufs_tol \"1.0\" --tp_tol \"1.0\"",
    "golden:check:loveletter": "node scripts/check_golden.cjs --game \"Love Letter\" --in \"out/love-letter/preview.mp4\" --golden \"tests/golden/loveletter\" --frames \"5,10,20\" --ssim \"0.995\" --lufs_tol \"1.0\" --tp_tol \"1.0\"",
    "golden:approve": "npm run golden:update:sushi && npm run golden:update:loveletter",
    "golden:check-with-junit": "node scripts/check_golden.cjs --game $GAME --in \"out/preview.mp4\" --golden \"tests/golden/$GAME\" --frames \"5,10,20\" --ssim \"0.995\" --lufs_tol \"1.0\" --tp_tol \"1.0\" --junit tests/reports/$GAME.xml",
    "golden:update": "node scripts/generate_golden.cjs",
    "golden:check:junit": "node scripts/check_golden.cjs",
    "golden:check:all": "node -e \"const {execSync}=require('child_process'); const games=['hanamikoji']; for(const g of games){ execSync('node scripts/check_golden.cjs --game \\\"'+g+'\\\" --in \\\"out/preview.mp4\\\" --perOs', {stdio:'inherit'}) }\"",
    "golden:validate": "node scripts/ci/validate_mobius_checklist.cjs",
    "golden:container:windows": "set RUNNER_OS=Windows && node scripts/generate_container_json.cjs",
    "golden:container:macos": "RUNNER_OS=macOS node scripts/generate_container_json.cjs",
    "golden:container:linux": "RUNNER_OS=Linux node scripts/generate_container_json.cjs",
    "golden:promote:windows": "powershell -ExecutionPolicy Bypass -File scripts/promote_baselines.ps1",
    "golden:promote:macos": "bash scripts/promote_baselines.sh space-invaders macos",
    "golden:promote:linux": "bash scripts/promote_baselines.sh space-invaders linux",
    "golden:promote": "cross-env node scripts/promote_baselines.cjs",
    "mobius:checklist": "node scripts/ci/validate_mobius_checklist.cjs --game",
    "mobius:checklist:linux": "RUNNER_OS=Linux node scripts/ci/validate_mobius_checklist.cjs --game",
    "mobius:checklist:mac": "RUNNER_OS=macOS node scripts/ci/validate_mobius_checklist.cjs --game",
    "mobius:checklist:win": "set RUNNER_OS=Windows && node scripts/ci/validate_mobius_checklist.cjs --game",
    "gen:container": "cross-env node scripts/generate_container_json.cjs",
    "frames": "cross-env node scripts/extract_frames.cjs",
    "checklist:new": "cross-env node scripts/ci/validate_mobius_checklist.cjs",
    "sushi:win": "cross-env GAME=sushi-go PLATFORM=windows RUNNER_OS=windows INPUT_FILE=dist/sushi-go/windows/tutorial.mp4 npm-run-all gen:container frames golden:check checklist:new",
    "sushi:mac": "cross-env GAME=sushi-go PLATFORM=macos RUNNER_OS=macos INPUT_FILE=dist/sushi-go/macos/tutorial.mp4 npm-run-all gen:container frames golden:check checklist:new",
    "sushi:linux": "cross-env GAME=sushi-go PLATFORM=linux RUNNER_OS=linux INPUT_FILE=dist/sushi-go/linux/tutorial.mp4 npm-run-all gen:container frames golden:check checklist:new",
    "golden:check:single": "cross-env node scripts/check_golden.cjs --perOs",
    "smoke": "npm run gen:container && npm run frames -- --fps 30 --sar 1:1 && npm run golden:check && node scripts/compare_ffprobe_vs_container.cjs artifacts/${GAME}-${PLATFORM}-ffprobe.json dist/${GAME}/${PLATFORM}/container.json",
    "frames:validate": "node scripts/validate_frame_count.cjs",
    "frames:perf": "node scripts/validate_frame_perf.cjs",
    "junit:validate": "node scripts/validate_junit.cjs",
    "perf:baseline": "node scripts/compare_perf_to_baseline.cjs",
    "ci:validate": "npm run frames:validate && npm run frames:perf && npm run junit:validate && node scripts/compare_perf_to_baseline.cjs"
  },
  "keywords": [
    "game",
    "tutorial",
    "video",
    "generator",
    "rules"
  ],
  "author": "Mobius Games",
  "license": "MIT",
  "dependencies": {
    "cheerio": "^1.1.2",
    "cors": "^2.8.5",
    "dotenv": "^17.2.2",
    "fast-xml-parser": "^5.2.5",
    "fs-extra": "^11.3.1",
    "image-size": "^2.0.2",
    "multer": "^2.0.2",
    "openai": "^5.20.0",
    "pdf-parse": "^1.1.1",
    "pdf-to-img": "^5.0.0",
    "pdfjs-dist": "^5.4.149",
    "sharp": "^0.34.3",
    "sqlite3": "^5.1.7",
    "typescript": "^5.0.0",
    "xml2js": "^0.6.2"
  },
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/node": "^18.0.0",
    "ajv": "^8.17.1",
    "concurrently": "^9.2.1",
    "cross-env": "^7.0.3",
    "jest": "^29.7.0",
    "npm-run-all": "^4.1.5",
    "ts-jest": "^29.4.1",
    "ts-node": "^10.9.1"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    }
  }
}
