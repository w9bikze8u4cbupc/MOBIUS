name: Golden Preview Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: golden-${{ github.ref }}
  cancel-in-progress: true

jobs:
  golden:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        game: [space-invaders]   # add more games

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install ffmpeg
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            choco install ffmpeg -y
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            brew install ffmpeg
          else
            sudo apt-get update
            sudo apt-get install -y ffmpeg
          fi

      - run: npm ci

      - name: Set OS_SLUG
        shell: bash
        run: |
          case "${{ runner.os }}" in
            Windows) echo "OS_SLUG=windows" >> $GITHUB_ENV ;;
            macOS)   echo "OS_SLUG=macos"   >> $GITHUB_ENV ;;
            Linux)   echo "OS_SLUG=linux"   >> $GITHUB_ENV ;;
          esac

      - name: Generate container.json for this OS
        run: node scripts/generate_container_json.cjs --game ${{ matrix.game }}
        env:
          RUNNER_OS: ${{ runner.os }}

      - name: Golden check -> JUnit
        run: node scripts/check_golden.cjs --game ${{ matrix.game }} --junit tests/golden/reports/${{ matrix.game }}_${{ env.OS_SLUG }}.xml

      - name: Validate checklist
        run: node scripts/ci/validate_mobius_checklist.cjs --game ${{ matrix.game }}

      # (You already added these, keep them)
      - name: Summarize Golden JUnit
        if: always()
        shell: bash
        run: |
          python - <<'PY' | tee -a "$GITHUB_STEP_SUMMARY"
          import glob, xml.etree.ElementTree as ET
          totals = {"tests":0,"failures":0,"errors":0,"skipped":0}
          for f in glob.glob('tests/golden/reports/*.xml'):
              try:
                  root = ET.parse(f).getroot()
                  totals["tests"]    += int(root.attrib.get("tests", 0))
                  totals["failures"] += int(root.attrib.get("failures", 0))
                  totals["errors"]   += int(root.attrib.get("errors", 0))
                  totals["skipped"]  += int(root.attrib.get("skipped", 0))
              except Exception:
                  pass
          print("### Golden JUnit Summary")
          for k,v in totals.items(): print(f"- {k.capitalize()}: {v}")
          PY

      - name: Upload Golden Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: golden-${{ runner.os }}-reports
          path: |
            tests/golden/reports/**
            tests/golden/**/debug/**