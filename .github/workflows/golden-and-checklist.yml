name: golden-and-checklist
on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: windows
            runner: windows-2022
            shell: pwsh
          - platform: macos
            runner: macos-14
            shell: bash
          - platform: linux
            runner: ubuntu-22.04
            shell: bash
        game: [sushi-go]
    runs-on: ${{ matrix.runner }}
    env:
      GAME: ${{ matrix.game }}
      PLATFORM: ${{ matrix.platform }}
      SSIM_MIN: "0.95"

    steps:
      - uses: actions/checkout@v4

      - name: Echo environment versions
        run: |
          echo "OS/Tools:"
          uname -a || true
          sw_vers || true
          node -v
          ffmpeg -version | head -n1
          ffprobe -version | head -n1

      - uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'

      - name: Install ffmpeg
        if: runner.os == 'Windows'
        run: choco install -y ffmpeg --version 8.0
      - name: Install ffmpeg
        if: runner.os == 'macOS'
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install ffmpeg
      - name: Install ffmpeg
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Prepare assets
        shell: ${{ matrix.shell }}
        run: |
          mkdir -p "dist/${GAME}/${PLATFORM}"
          cp "tests/assets/${GAME}/tutorial.mp4" "dist/${GAME}/${PLATFORM}/tutorial.mp4"

      - name: ffprobe source video
        shell: ${{ matrix.shell }}
        run: |
          ffprobe -v error -select_streams v:0 \
            -show_entries stream=width,height,avg_frame_rate,r_frame_rate,pix_fmt,sample_aspect_ratio \
            -of json "dist/${GAME}/${PLATFORM}/tutorial.mp4" > "artifacts/${GAME}-${PLATFORM}-ffprobe.json"

      - run: npm ci

      - name: Generate container.json
        run: npx cross-env GAME=$GAME PLATFORM=$PLATFORM RUNNER_OS=$RUNNER_OS npm run gen:container

      - name: Extract frames
        run: npx cross-env GAME=$GAME PLATFORM=$PLATFORM npm run frames

      - name: Print directories and frame counts
        run: |
          echo "RUNNER_OS=$RUNNER_OS, platform=$PLATFORM"
          echo "Container exists?" && test -f "dist/${GAME}/${PLATFORM}/container.json" && echo yes || echo no

      - name: Count golden frames (cross-platform)
        run: |
          node -e "const fs=require('fs');const p=`dist/${GAME}/${PLATFORM}/frames`;console.log(fs.existsSync(p)?fs.readdirSync(p).filter(f=>!f.startsWith('.')).length:0)"

      - name: Validate container.json (Ajv)
        run: node scripts/validate_container_json.cjs "dist/${GAME}/${PLATFORM}/container.json"

      - name: Compare ffprobe vs container.json
        run: node scripts/compare_ffprobe_vs_container.cjs \
               "artifacts/${GAME}-${PLATFORM}-ffprobe.json" \
               "dist/${GAME}/${PLATFORM}/container.json"

      - name: Golden check
        shell: ${{ matrix.shell }}
        run: |
          npx cross-env GAME=$GAME PLATFORM=$PLATFORM SSIM_MIN=$SSIM_MIN npm run golden:check | tee "${PLATFORM}_golden.log"
          grep -E "Resolved|golden dir|frames dir|SSIM" "${PLATFORM}_golden.log" || true

      - name: Checklist
        run: npx cross-env GAME=$GAME PLATFORM=$PLATFORM npm run checklist:new

      - name: Show JUnit head (if exists)
        run: |
          node -e "const fs=require('fs'),path=require('path');const d='tests/golden/reports';if(fs.existsSync(d)){for(const f of fs.readdirSync(d)){if(f.endsWith('.xml')){console.log('---',f,'---');console.log(fs.readFileSync(path.join(d,f),'utf8').split('\n').slice(0,40).join('\n'));}}}"

      - name: Upload JUnit and artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-and-diffs-${{ matrix.platform }}-${{ matrix.game }}
          path: |
            artifacts/${{ matrix.game }}-${{ matrix.platform }}-ffprobe.json
            tests/golden/reports/**/*.xml
            tests/golden/${{ matrix.game }}/**/debug/**
            tests/golden/${{ matrix.game }}/**/frames/**
            ${{ matrix.platform }}_golden.log
            dist/${{ matrix.game }}/${{ matrix.platform }}/container.json
            dist/${{ matrix.game }}/${{ matrix.platform }}/frames/**