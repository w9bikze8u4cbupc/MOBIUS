name: premerge-validation

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  premerge-validation:
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Ensure FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v2

      - name: Create artifact directories
        run: |
          mkdir -p premerge_artifacts backups monitor_logs
        shell: bash

      - name: Run golden checks
        run: |
          # Run golden checks if they exist
          if [ -f "scripts/check_golden.js" ]; then
            node scripts/check_golden.js --game hanamikoji --perOs --junit "premerge_artifacts/golden-junit-${{ runner.os }}.xml" || true
          fi
        shell: bash

      - name: Generate backup artifacts (example)
        run: |
          # Create example backup files
          echo "backup-content-${{ github.sha }}" > backups/dhash_v1.2.3.zip
          echo "$(sha256sum backups/dhash_v1.2.3.zip | cut -d' ' -f1)" > backups/dhash_v1.2.3.zip.sha256
        shell: bash

      - name: Create deployment logs (dry-run)
        run: |
          echo "Deploy dry-run log for ${{ github.sha }} on ${{ runner.os }}" > premerge_artifacts/deploy-dryrun.log
          echo "Migration dry-run log for ${{ github.sha }} on ${{ runner.os }}" > premerge_artifacts/migrate-dryrun.log
          echo "Post-deploy smoke tests log for ${{ github.sha }} on ${{ runner.os }}" > premerge_artifacts/postdeploy-smoketests.log
          echo "Test logging output for ${{ github.sha }} on ${{ runner.os }}" > premerge_artifacts/test_logging.log
          echo "Monitor logs placeholder for ${{ github.sha }} on ${{ runner.os }}" > monitor_logs/staging-canary.log
        shell: bash

      - name: Upload premerge artifacts
        uses: actions/upload-artifact@v4
        with:
          name: premerge-artifacts-${{ matrix.os }}
          path: |
            premerge_artifacts/
            backups/
            monitor_logs/

  premerge-artifacts-upload:
    needs: premerge-validation
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./all-artifacts

      - name: Consolidate artifacts
        run: |
          mkdir -p consolidated-artifacts
          find ./all-artifacts -name "*.log" -o -name "*.xml" -o -name "*.zip*" | xargs -I {} cp {} consolidated-artifacts/ 2>/dev/null || true
          ls -la consolidated-artifacts/

      - name: Upload consolidated artifacts
        uses: actions/upload-artifact@v4
        with:
          name: premerge-artifacts-consolidated
          path: consolidated-artifacts/