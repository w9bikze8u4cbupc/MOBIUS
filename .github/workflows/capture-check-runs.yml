name: Capture CI check-run names and post/update PR comment

on:
  # Runs when any workflow finishes â€” adjust 'workflows' if you want to scope to specific CI workflow(s)
  workflow_run:
    workflows: ["tutorial-visibility-ci", "CI", "Branch Protection CI"] # replace/add actual workflow names if desired
    types:
      - completed

permissions:
  checks: read       # to list check runs for a commit
  issues: write      # to post comments on PRs
  pull-requests: read
  contents: read

jobs:
  post-check-names:
    runs-on: ubuntu-latest
    steps:
      - name: Post check-run names to associated PR(s)
        uses: actions/github-script@v7
        with:
          script: |
            const headSha = context.payload.workflow_run?.head_sha;
            if (!headSha) {
              core.info("No head_sha found on payload; exiting.");
              return;
            }

            // Find PRs associated with this commit
            const { data: pulls } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: headSha
            });

            if (!pulls || pulls.length === 0) {
              core.info(`No PRs associated with commit ${headSha}. Nothing to post.`);
              return;
            }

            // Get check runs for this ref (commit)
            const { data: checksData } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: headSha,
              per_page: 100
            });

            const checkNames = (checksData.check_runs || []).map(c => c.name);

            if (checkNames.length === 0) {
              core.info(`No check runs found for commit ${headSha}.`);
              return;
            }

            const bodyLines = [
              `Automated CI check-run names for commit \`${headSha}\`:`,
              '',
              ...checkNames.map(n => `- ${n}`),
              '',
              '_Use these exact strings when updating branch protection required status check contexts._'
            ];

            const commentBody = bodyLines.join("\n");
            const commentHeader = "Automated CI check-run names for commit";

            // For each associated PR, either update existing comment or create new one
            for (const pr of pulls) {
              // Look for existing comment from this bot
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number
              });

              const existingComment = comments.find(comment => 
                comment.user.type === 'Bot' && 
                comment.body.startsWith(commentHeader)
              );

              if (existingComment) {
                // Update existing comment
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existingComment.id,
                  body: commentBody
                });
                core.info(`Updated check-run list in existing comment on PR #${pr.number}`);
              } else {
                // Create new comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: commentBody
                });
                core.info(`Posted check-run list to new comment on PR #${pr.number}`);
              }
            }