name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-

      - name: Install dependencies
        run: npm ci

      - name: Install poppler (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            sudo apt-get update -y || true
            sudo apt-get install -y poppler-utils || true
          fi

      - name: Ensure FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v2

      - name: Lint
        run: |
          if grep -q '"lint"' package.json; then
            npm run lint
          else
            echo "No lint script found, skipping"
          fi
        continue-on-error: false

      - name: Run tests
        run: npm test -- --ci --reporter=dot

      - name: Test logging system
        run: node scripts/test_logging.js

      - name: Create test backup
        run: |
          mkdir -p backups
          ./scripts/backup_library.sh --out "backups/test-backup-$(date -u +%Y%m%dT%H%M%SZ).zip" --verbose

      - name: Test deployment script (dry-run)
        run: ./scripts/deploy_dhash.sh --dry-run --env staging > deploy-dryrun.log 2>&1

      - name: Test migration script (dry-run)
        run: node scripts/migrate-dhash.js --dry-run > migrate-dryrun.log 2>&1

      - name: Upload logs/artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts-${{ matrix.os }}
          path: |
            deploy-dryrun.log
            migrate-dryrun.log
            backups/*.zip.sha256
            logs/

  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: |
          if command -v npx && npx eslint --version >/dev/null 2>&1; then
            npx eslint src/ scripts/ --ext .js --format compact
          elif grep -q '"lint"' package.json; then
            npm run lint
          else
            echo "ESLint not available, skipping"
          fi
        continue-on-error: true