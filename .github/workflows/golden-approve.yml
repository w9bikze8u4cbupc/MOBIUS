name: Golden Approve

on:
  workflow_dispatch:
    inputs:
      games:
        description: "Comma-separated list of games (e.g. hanamikoji,sushi-go,love-letter)"
        required: true
        default: "hanamikoji"
      perOs:
        description: "Use per-OS baselines"
        type: boolean
        default: true

jobs:
  approve:
    name: Approve baselines (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install FFmpeg (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install FFmpeg (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install ffmpeg

      - name: Install FFmpeg (Windows)
        if: runner.os == 'Windows'
        run: choco install ffmpeg -y --no-progress

      - name: Install dependencies
        run: npm ci

      - name: Render previews (replace with your real commands)
        run: |
          npm run render:proxy || true

      - name: Generate baselines
        env:
          GAMES: ${{ github.event.inputs.games }}
          PER_OS: ${{ github.event.inputs.perOs }}
        run: |
          node -e "const { execSync } = require('child_process'); const games=(process.env.GAMES||'').split(',').map(s=>s.trim()).filter(Boolean); const perOs = String(process.env.PER_OS) === 'true'; const flag = perOs ? '--perOs' : ''; for(const g of games){ console.log('Approving baseline for', g); execSync(\`node scripts/generate_golden.js --game \"\${g}\" \${flag}\`, {stdio:'inherit'}); }"

      - name: Upload new baselines
        uses: actions/upload-artifact@v4
        with:
          name: golden-baselines-${{ matrix.os }}
          path: tests/golden/**
          if-no-files-found: ignore