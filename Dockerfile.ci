# Dockerfile.ci - Alpine-based Node 20.18.1 CI image with ffmpeg
# 
# This image is designed for CI/CD pipelines and staging environments.
# It includes only production dependencies and runs as a non-root user.

# Use Alpine-based Node.js 20.18.1
FROM node:20.18.1-alpine

# Set working directory
WORKDIR /app

# Install system dependencies
# - ffmpeg: for video processing
# - python3: for node-gyp and native modules
# - make, g++: for building native modules
RUN apk add --no-cache \
    ffmpeg \
    python3 \
    make \
    g++

# Create non-root user (UID 1001)
RUN addgroup -g 1001 -S appuser && \
    adduser -u 1001 -S appuser -G appuser

# Copy package files
COPY package*.json ./

# Install dependencies (production only)
RUN npm ci --only=production && \
    npm cache clean --force

# Copy application files
COPY . .

# Ensure proper ownership
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 5001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD node -e "require('http').get('http://localhost:5001/health', (r) => { process.exit(r.statusCode === 200 ? 0 : 1); })" || exit 1

# Default command
CMD ["node", "src/api/index.js"]
