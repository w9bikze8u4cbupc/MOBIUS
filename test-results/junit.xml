<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="20" failures="0" errors="0" time="6.151">
  <testsuite name="WebSocketGuard" errors="0" failures="0" skipped="19" timestamp="2025-10-02T14:09:05" time="1.837" tests="20">
    <testcase classname="WebSocketGuard should create a WebSocket connection" name="WebSocketGuard should create a WebSocket connection" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard should connect to WebSocket" name="WebSocketGuard should connect to WebSocket" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard should not reconnect if already connected" name="WebSocketGuard should not reconnect if already connected" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard should handle WebSocket open event" name="WebSocketGuard should handle WebSocket open event" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard should handle WebSocket close event" name="WebSocketGuard should handle WebSocket close event" time="0.083">
    </testcase>
    <testcase classname="WebSocketGuard should handle WebSocket error event" name="WebSocketGuard should handle WebSocket error event" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard should handle WebSocket message event" name="WebSocketGuard should handle WebSocket message event" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard should send message when connected" name="WebSocketGuard should send message when connected" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard should not send message when not connected" name="WebSocketGuard should not send message when not connected" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard should close connection" name="WebSocketGuard should close connection" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard should calculate delay with exponential backoff" name="WebSocketGuard should calculate delay with exponential backoff" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard should reset retry count" name="WebSocketGuard should reset retry count" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard applies exponential backoff + jitter within bounds" name="WebSocketGuard applies exponential backoff + jitter within bounds" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard does not exceed maximum retry attempts" name="WebSocketGuard does not exceed maximum retry attempts" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard respects max delay cap" name="WebSocketGuard respects max delay cap" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard applies exponential backoff + jitter within bounds" name="WebSocketGuard applies exponential backoff + jitter within bounds" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard does not reconnect when ws.readyState === OPEN" name="WebSocketGuard does not reconnect when ws.readyState === OPEN" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard does not reconnect when ws.readyState === CONNECTING" name="WebSocketGuard does not reconnect when ws.readyState === CONNECTING" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard respects maximum retry attempts" name="WebSocketGuard respects maximum retry attempts" time="0">
      <skipped/>
    </testcase>
    <testcase classname="WebSocketGuard calculates delay with proper jitter bounds" name="WebSocketGuard calculates delay with proper jitter bounds" time="0">
      <skipped/>
    </testcase>
  </testsuite>
</testsuites>